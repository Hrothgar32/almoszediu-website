#+HUGO_BASE_DIR: ~/Documents/almoszediu-website
#+HUGO_FRONT_MATTER_KEY_REPLACE: author>nil

#+HUGO_WEIGHT: auto
#+HUGO_AUTO_SET_LASTMOD: t
* Announcements :@announcements:
These posts in here will have the category set to /announcements/.
** DONE Beginning this whole Hugo thing :hugo:org:
:PROPERTIES:
:EXPORT_FILE_NAME: beginning-this-hugo-thing
:EXPORT_DATE: 2020-05-14
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :featuredImage "/images/beginning.jpg"
:END:
*** What's this blog all about
To share the love for the one and only OS, Emacs of course. Well, not entirely.
It will contain random snippets of thought, both professional and
unprofessional, so it will reflect my thoughts on the current state of certain
software projects which I discover. In the beginning this going to be a bit
self-centered, as it will also be a kind of "self-documentation" I suppose, but
this could change easily.
**** Implementation
I'm writing this whole website inside of Emacs, taking advantage of a couple
of wonderful things, built by wonderful people:
- [[https://gohugo.io][Hugo]] is a static site generator written inside of Go. You can use various
  formats to edit the content of your website, but the most sensible choice is
  Markdown, because that's what Hugo is really optimized for. The advantages of
  this approach as opposed to a non-static website is that the only HTTP request
  happens when the user loads in the page, making databases unneccesary, and
  making the whole website a lot faster.
- Markdown might be amazing, but every citizen of the Emacs realm knows, that
  org-mode is the shit. But how can you use org mode
  for your website, when you have to use markdown? [[https://ox-hugo.scripter.co][ox-hugo]] to the rescue! This
  wonderful Emacs package not only enables you to convert your org thoughts to
  Markdown, but also has the ability to export a single subtree into it's own
  post, making possible to write all of your blogposts in a single place, taking
  advantage of various org-mode tricks (*or so am I told, I actually still don't
  know very much about them*). See for yourselves:
 
  [[/images/org-mode-big-brain.png]]

  Amazing isn't it? Well, I have to learn much more about this org thing, to
  take advantage of it, but it's sure easier updating the Github page
  of the website, when it's only one measly file.
- [[https://github.com/hlissner/doom-emacs][Doom Emacs]]. Well of course we cannot forgot the star of this evening, the
  whole reason I'm going far and beyond in my static website setup. But it is
  totally worth it. In the near future, there will be posts about my workflow,
  and all the pain and suffering which came because of it, but it's all possible
  thanks to hlissner's efforts. If you're still using Vim, Spacemacs or use
  Emacs, but you're not sure how to configure it yourself, give this distro a
  spin, I'm sure you'll get something out of it.

 [[/images/doom-emacs.png]]
**** Future
I'm planning to write a Spotify frontend for Emacs, because I'm too lazy to
switch workspaces to do such a trivial task, so yeah, instead of relying on some
wonderfully written programs, like [[https://github.com/Rigelutte/spotify-tui][spotify-tui]], I'm wondering of a wild path,
and write my first Emacs Lisp package. This thing is one of the reasons I
started this blog, because I thought it would be fun to document the whole
process, maybe some fortunate soul will learn from my mistakes.
* Emacs :@emacs:
Emacs gang where you at?
** TODO Yet another praise for Doom :emacs:
:PROPERTIES:
:EXPORT_FILE_NAME: yet-another-praise-for-doom
:EXPORT_DATE: 2020-05-14
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :featuredImage "/images/doom-logo.png"
:END:
*** The Vim times
I know, everybody and their mother-in-law have already talked about this, but I
think this thing cannot be understated: "Emacs is a good operating system, it
only lacks a decent text editor.". I've tried to use Vim as my main text editor,
I really did. I took a deep breath and tried to find the perfect Python packages
for me to install, trying to emulate the nice features of the previous Electron
based VS Code, from which I've departed with an aching hear
** TODO Getting really started with Org mode. :emacs:org:
:PROPERTIES:
:EXPORT_FILE_NAME: getting-started-org
:EXPORT_DATE: 2020-05-15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :featuredImage "/images/unicorg.jpg"
:END:
Time and time again we hear about how ludicrously awesome Org is, and how should
we use it for everything, from scheduling tasks to taking notes at university
and the like. Since currently I'm not going back to Uni any time soon, I will
try mainly to take advantage of the former feature.

*** Agenda and other types of sorcery
The agenda minibuffer could be called your "productivity hub", since from there
you can access your tags and TODO's, the former categoryzing your tasks, the
latter than visualizing them. To bring it up, you type:
* Tech tutorials :@tutorial:
** STRT [#B] Some remarks on Remark42, and how to set it up :hugo:remark:
:PROPERTIES:
:EXPORT_FILE_NAME: how-to-set-up-remark
:EXPORT_DATE: 2020-05-16
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :featuredImage "/images/finger.jpg"
:END:
One of the challenges of starting a blog like this is to add a commenting
mechanism in order to connect with your audience. There are many options
available, but today I'll be explaining why I've chosen Remark, what are it's
particular advantages which make me choose it over other options, and how did I
set it up on my site. This
particular guide is aimed primarily toward fellow Hugo users, but I think it can
be followed by others as well, due to the way I hacked it into my blog.
*** The competition
**** [[https://disqus.com][Disqus]]
 Let's get the elephant out of the room, shall we? Disqus is easy to set up, easy to use, and comes built in with Hugo, and more
 you can set it up for free! Well, when something is too good to be true, it
 usually isn't. Disqus comes with advertisements, which it displays on your
 website and these ads may be totally out of touch with your actual content, for
 example:
 [[/images/disqus-ads.png]]
 Yikes, disques-sting! So yeah, your blog may be filled with tabloid crap,
 unless you pay $10 a month, which for me, as a student, is a little bit much.
 Moreover, Disqus not only shows your user's ads, but [[https://chrislema.com/killed-disqus-commenting/][also tracks them in a
 parasitic way to sell their data,]] and the gateway might be your blog.
**** [[https://staticman.net/][Staticman]]
Staticman is a free and open source project which aims to bring form integration
to fully static websites. The cool thing about this is that this way you can
integrate it to your free to host GitHub pages site, because of the generous
support by [[https://snipcart.com/][Snipcart]]. Because of it's open source nature, you can even host it on
your site if you're so inclined.
What's the deal breaker then? It's FOSS, it doesn't poke around in your
business, why didn't I choose this? Well, it seemed to me a bit... lacking, not
as pretty as Remark. It also lacks the social integration and avatars seen used
by other comment engines.

[[/images/staticman.png]]
**** [[https://utteranc.es][Utterances]]
"A lightweight comments widget built on GitHub issues." Sounds amazing! But not
so much for me. Don't get me wrong, I love you fellow nerds, but I think the
choice should be given to you, if you want the world to see your lovely face
next to your comment, or not. It might be useful for some of you though, who
want the advantages of GitHub pages with additional GitHub goodness. It's a
creative and elegant solution, I'll have to give it that.

[[/images/utterances.png]]
**** [[https://commento.io/][Commento]]
Commento has a very nice business model, and I think it proves, that open-source
can be turned into a business just as easily as proprietary applications. It
also received $19,200 from the Mozzilla foundations, which shows its
seriousness, I think. This comment engine can also be self hosted with Docker so
I think it really comes down to personal preference, if you choose this or
Remark. I might try it out in the future, because it supports many of the
features, which were important to me. If you ask me, why I've chosen Remark, I
would say that because it gave me more Redditesque vibes, to be honest.

[[/images/commento.png]]
*** [[https://github.com/umputun/remark42][Remark itself]]
Well I've could have gone over the whole "Comments alternatives" part of the
Hugo docs, but I chose to cover just those, which I was considering. The main
things, that ultimately lead me to choose Remark were:
- it's free and open source
- self-hosted option
- OAuth2 features easily enabled through it's docker-compose file
- RSS for you, flamewar warriors
- it looks like Reddit
It's self-hosted which for me, as a do-everything-yourself, Emacs loving madman
is acceptable, even desirable, but you might have different needs, or don't want
to be bothered by hosting a blog on a VPS. I won't be going into VPS hosting,
because that is beyond the scope of this blogpost, just know, that the
alternatives listed above don't need self-hosting.
I won't be posting pictures about it, because you can check it out right under
the article.
Let's talk about how did I set it up though?

*** Setup, part I: your ingredients
- 1 teaspoon of Docker
 
  *Shell commands for Ubuntu-boys (also for Debian-boomers)*

  I assume that you use version 16.04 or higher of Ubuntu or a distribution
  based off of Ubuntu. My server runs on
  version 18.04 which seems to be the most prevalent version in hosting as of
  now.
  #+BEGIN_SRC bash
sudo apt-get update
sudo apt-get install docker docker-compose
  #+END_SRC

  *Shell commands for Arch-mages*
 
  Well I've done some toy projects on Arch Linux, but I don't know if it's very
  suitable for server usage, because of it's bleeding edge nature.
  #+BEGIN_SRC bash
sudo pacman -Sy
sudo pacman -S docker docker-compose
  #+END_SRC

  *Shell commands for Fedora-fanatics*
 
  I'm not an expert on Fedora, but the Docker guys say, that you should have a
  version of minimum Fedora 30. I mainly copied the commands from their site, so
  you lazy bastards won't have to open another tab, so take these with a grain
  of salt.
 
  #+BEGIN_SRC bash
sudo dnf -y install dnf-plugins-core
sudo dnf config-manager \
    --add-repo \
    https://download.docker.com/linux/fedora/docker-ce.repo
sudo dnf install docker-ce docker-ce-cli containerd.io docker-compose
  #+END_SRC
  The next step is to enable the Docker service through systemd:

  #+BEGIN_SRC bash
sudo systemctl start docker
  #+END_SRC

  Another cool thing would be to add your user to the docker group. Without
  this, you'd have to run docker commands with sudo, or worse, as the root user,
  so I think it's time you show the server that you're a big boy now:

  #+BEGIN_SRC bash
sudo usermod -aG docker *your_username*
  #+END_SRC

  After this, you should be able to use the docker commands which I'll be using.
  Sweet!
